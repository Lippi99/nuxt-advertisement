generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  users     User[]
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  name           String
  lastName       String
  password       String
  roleId         Int
  birth          DateTime
  role           Role            @relation(fields: [roleId], references: [id])
  establishments Establishment[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
}

model Playlist {
  id              Int           @id @default(autoincrement())
  name            String
  advertisementId Int
  advertisement   Advertisement @relation(fields: [advertisementId], references: [id], onDelete: Cascade)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}

model Establishment {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  monitors  Monitor[]
}

model Monitor {
  id              Int             @id @default(autoincrement())
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @default(now())
  establishmentId Int
  establishment   Establishment   @relation(fields: [establishmentId], references: [id])
  advertisements  Advertisement[]
}

model Advertisement {
  id        Int                  @id @default(autoincrement())
  name      String
  createdAt DateTime             @default(now())
  monitorId Int
  monitor   Monitor              @relation(fields: [monitorId], references: [id])
  images    AdvertisementImage[]
  updatedAt DateTime             @default(now())
  playlists Playlist[]
}

model AdvertisementImage {
  id              Int           @id @default(autoincrement())
  advertisementId Int
  url             String
  advertisement   Advertisement @relation(fields: [advertisementId], references: [id], onDelete: Cascade)
}
