generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  users     User[]
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  name           String
  lastName       String
  password       String
  roleId         Int
  birth          DateTime
  role           Role            @relation(fields: [roleId], references: [id])
  establishments Establishment[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
}

model Playlist {
  id             Int             @id @default(autoincrement())
  name           String
  monitors       Monitor[]
  advertisements Advertisement[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
}

model Establishment {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  monitors  Monitor[]
}

model Monitor {
  id              Int           @id @default(autoincrement())
  name            String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
  establishmentId Int
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
  playlistId      Int?
  playlist        Playlist?     @relation(fields: [playlistId], references: [id])
}

model Advertisement {
  id         Int                  @id @default(autoincrement())
  name       String
  createdAt  DateTime             @default(now())
  images     AdvertisementImage[]
  updatedAt  DateTime             @default(now())
  playlistId Int?
  playlist   Playlist?            @relation(fields: [playlistId], references: [id])
}

model AdvertisementImage {
  id              Int           @id @default(autoincrement())
  advertisementId Int
  url             String
  advertisement   Advertisement @relation(fields: [advertisementId], references: [id], onDelete: Cascade)
}
